AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  DestinationEmail:
    Description: "The email to send the alert to"
    Type: String
  BucketName:
    Description: "S3 Bucket where the code is stored"
    Type: String
  BucketKey:
    Description: "S3 Bucket zip file key"
    Type: String
  AccountAlias:
    Description: "Account Alias used to identify the account in the emails"
    Type: String

Resources:
  LambdaCodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName

  InstanceBleeperFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref BucketName
        S3Key: !Ref BucketKey
      Description: Instance Bleeper Event Handler
      FunctionName: InstanceBleeperEventHandler
      Environment:
          Variables:
              DestinationEmail: !Ref DestinationEmail
              AccountAlias: !Ref AccountAlias
              AccountId: !Ref AWS::AccountId
      Handler: dist/index.sendEmail
      MemorySize: 1024
      Role:
        Fn::GetAtt:
        - InstanceBleeperFunctionRole
        - Arn
      Runtime: nodejs8.10
      Timeout: 30

  InstanceBleeperFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: EventHandlerPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ses:SendEmail
            - organizations:DescribeAccount
            - ec2:DescribeInstances
            Resource: "*"
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            Resource:
              Fn::Join: [ ":",
                [
                  "arn:aws:logs",
                  !Ref "AWS::Region",
                  !Ref "AWS::AccountId",
                  "*"
                ]
              ]
          - Effect: Allow
            Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStream
            Resource:
              Fn::Join: [ ":",
                [
                  "arn:aws:logs",
                  !Ref "AWS::Region",
                  !Ref "AWS::AccountId",
                  "log-group",
                  "/aws/lambda/InstanceBleeperEventHandler*"
                ]
              ]

  EC2StateMonitor:
    Type: "AWS::Events::Rule"
    Properties:
      Name: EC2StateMonitor
      Description: EC2StateMonitor
      EventPattern:
        detail-type:
          - "EC2 Instance State-change Notification"
        source:
          - "aws.ec2"
        detail:
          state:
            - running
      Targets:
         -
           Arn:
             Fn::GetAtt:
               - "InstanceBleeperFunction"
               - "Arn"
           Id: "TargetFunctionV1"

  EC2StateMonitorLambdaInvokePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Fn::GetAtt:
          - "InstanceBleeperFunction"
          - "Arn"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn:
        Fn::GetAtt:
          - "EC2StateMonitor"
          - "Arn"
